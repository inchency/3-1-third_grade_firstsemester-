(과제1) 클라이언트-서버 기반 채팅 프로그래밍

(구현환경) 
- C 언어
- 운영체제(IDE): linux(없음), Windows(Visual Studio Community 2015-Visual C++)
- 샘플소스코드: linux(chat_client.c, chat_server.c)
                Windows(chat_client_win.c, chat_server_win.c)


(구현기능)

- (채팅프로토콜)
    1)가입: command("@@join <본인ID>"), 클라이언트가 서버에 접속할 때 코멘트 전송과
             함께 본인의 ID 등록.
    2)탈퇴: command("@@out"), 클라이언트가 서버접속을 끝낼 때 서버에 코멘드 전송.
    3)조회: command("@@member"), 클라이언트가 채팅가입자 ID를 서버에 문의할 때 사용
    4)메시징: command("@@talk <상대방ID> <메시지내용>"), 클라이언트가
             특정 상대방을 지목하여 개인적인 메시지를 보낼 때 사용.

- (클라이언트측 기능)
    1)프로그램 실행 시 본인의 채팅ID를 입력제공함. 
       이때 클라이언트는 <가입>command를 서버에 송신함.
    2)채팅을 마감하고자 할 때 "&quit"를 입력하고 엔터키를 침.
       이때 클라이언트는 <탈퇴>command를 서버에 송신하고 프로그램 실행을 종료함.
    3)서버에 등록된 채팅가입자 ID리스트를 받고자 하면 "&list" 입력 후 엔터키를 침.
       이때 클라이언트는 <조회>command를 서버에 송신함.
    4)특정 상대에게만 비밀글을 보내고자 하면, "&p2p <상대방ID> <메시지내용>"
        입력 후 엔터키를 침. 이때 클라이언트는 관련 command를 서버에 송신함.
    5)"&"로 시작하지 않는 문자열은 정상채팅 문자열로서, 그대로 서버로 송신됨.
    6)서버로부터 온 모든 메시지는 화면에 출력됨.

- (서버측 기능)
    1)"@@"가 아닌 글자로 시작되는 문자열이 수신되면 모든 채팅등록자들에게 
        그대로 송신(브로드캐스트)함.
    2)<가입>메시지가 도착하면 신규ID를 내부 가입자리스트에 추가한 후 모든 
        가입자들에게 신규가입자ID를 알려주는 문자열을 송신.
    3)<탈퇴>메시지가 도착하면 내부 가입자리스트에서 해당 ID를 제거한 후 모든 
        가입자들에게 탈퇴가입자ID를 알려주는 문자열을 송신.
    4)<조회>메시지가 도착하면 내부 가입자리스트에 들어있는 모든ID값들로 구성된
        응답메시지를 만들고, 조회한 클라이언트에게만 송신.
    5)<메시징>메시지가 도착하면 <상대방ID>에 해당되는 클라이언트에게만
        재구성된 메시지 "비밀글: <송신자ID>: <메시지내용>"을 송신.


(제출) 
- 4/23(토)까지 가상대학에 제출
- 구현 소스프로그램 명칭: "chat_server_(운영체제)_(학번및이름).c" 
                          "chat_server_(운영체제)_(학번및이름).c"

(평가) 
- 프로그램 구현기능 정상동작 여부 평가
- 1대 PC사용, 서버 프로그램 실행 후, 3개 클라이언트 론칭(launching) 
- 시간/장소: 4/25(월)C교시 / 447호

