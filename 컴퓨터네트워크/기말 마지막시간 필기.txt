이방에 있는 50대의 컴퓨터 네트워크는 한군데로 모임 다시 흩어짐 라우터같은걸로 모임(허브)
50여대 -> 라우터 -> 다시 배분
즉 같은곳에 있는 사람들끼리 채팅을 한다 치면 바로가는것이 아니라 허브를 거쳐서 다시 보낸사람에게 오는 것이다.
29페이지부터
대표적 기술
CSMA   carrier sense multiple access
CS는 네트워크에 센서가 부착되어 있음 메세지가 흘러가는지 아닌지를 감지할수 있음
센싱을 해서 누군가 보내는 중이라면 나는 보내지 않고 기다리겠음 .. - CS

MA는 multiple access의 약자 여러대의 단말장치들이 네트워크에 접속되어 있는 상태

CS기술을 한다해도 100퍼 해결되는것은 아니다
순간적으로 메세지 송신이 안일어나는것을 센싱해서 시작했는데
거의 같은 순간에 시작하면 (조금 늦게 도착했을뿐이지) 어쩔수 없는 충돌이 일어남
그렇게되면 어느비트를 보냈는지 확인할수없음 (재전송해야함)  - CSMA collisions


CSMA/CD (collision detection)
이 기술을 기본으로 해서 50대 컴퓨터 네트워크 기술 완성
충돌을 감지한다. 앞에꺼는 센싱이였음(누군가가 전송중이면) CD는 이미 충돌이 일어난 것을 감지한다. 나는 1을 보냈는데 1도아닌 0.5 등과 같은
이상한 값이 들어온다? 그럼 충돌이 확실한것임. 이렇게 충돌이 확실시 되면 그냥 꺼버린다. 이렇게 하면 남은걸 안보내니까 낭비가 될것을
방지함. 빨리 stop 하는게 좋음. 만약 20퍼지점에서 충돌 확인하면 거기서 stop 하면 80퍼 안하니까 효율적이다.
즉 센싱을 첨에 해보고, 또 충돌이 일어나면 그걸 감지해서 충돌일어나면 꺼버린다.

Ethernet CSMA/CD 알고리즘
이방에 있는 50대 컴퓨터가 사용하는 네트워크 기술 - CSMA/CD (가장 효율적인) 이거 사용함
알맹이가 CSMA/CD라 생각하면됨 이더넷은 큰 부분이라 생각하면됨 바이너리 백오프를 함

1. 프레임을 만듦
2. 만약 아무것도 없다(IDLE)상태라면 메세지 송신을 프레임에 시작함 만약 바쁘다면(송신중이라면) 기다림 누군가의 송신이 끝날때 까지
3. 만약에 어느 누구도 만약 8000bit 보내야하는데 8000bit까지 충돌이 일어나지 않았다면 끝난다. (정상 완료) 그런데 그렇지 않으면 4번으로감
4. 중간에 누군가 송신을 시작했음(메세지가 망가졌음) 그러면 포기하고 jam signal(버무린다 - 메세지를 확실하게 망가트린다 방해전파)
5. binary exponential(지수) 랜덤한 숫자
최초의 충돌이 일어나면 sleep의 시간을 0~7 
또한번 충돌일어나면 2의 4승 0~15
또한번 충돌일어나면 2의 5승 0~31
충돌이 일어날때마다 sleep하는 범위를 직전상태의 2배로 한다.


여기까지는 여러대의 단말기가 하나의 네트워크를 사용하려고 들어왔을 때 충돌이 일어났을때 줄이려는 접근법을 썼음.
이번에는 원천 봉쇄하는 방법을 써보자
polling (이마트같은 계산단말기 30대 가 쓰는 방법이 이것임 polling이란건 질문하는거)
P    O     S
나머지는 다 slaves 단말인데 딱 1개만 master 단말이다. 주기적으로 기회를 한번씩 준다. 나한테 할말있음? 0.2초전에 질문을 했는데 혹시 물건 판거
있음? 응답으로 양파 몇개 팔았고 얼마다. 통계를 내야하니까, 양파 모자르면 추가주문 해야하니까 (데이터 수집)
마스터는 질문한번하고 응답메세지를 받고 없으면 변동사항없음. 이렇게하면 충돌이 일어날 수가 없음.
두대이상의 단말이 메세지를 내보낼만한 상황이 원천적으로 일어나지 않는다.
이거는 골고루 계산이 분산되어있는 경우에 쓰면효율적이다. (사이클 돌면서 질문 할만 한다.) 다른 상황에서는 그닥... 어느 한쪽만 사용하는경우가
많으므로

toekn은 하나밖에 없음
token을 가지는 부분에서만 token은 순환함. 기회를 줌(?????????????)
마스터가 계속 바뀐다고 생각하면 됨

ARP(처음 설정해줄 때 십진수로 dns하고 게이트 주소를 줘서 실제 16진수 주소로 되어있는 라우터로 못가니까 브로드캐스트로 모든라우터로 보냄..? 즉 10진수를 16진스로 변환하는데 도움줌)
이서넷 프로토콜과 함꼐 이서넷 어드레스라는게 존재한다. 어드레스는 세단계에 최상위 도메인 www
삼계층에는 ip주소 
제2계층에 주소가 또있다 서너가지이름으로 불림. mac address , hardware address , (lan or physical or ethernet) address 길이는 6바이트
16진수로 6자리 쓰고있음. 하드웨어주소 이서넷 주소라는것은 6바이트로 16진수
ex) 71-65-F7-2B-08-53 <- 이게 진짜 주소(?)
내가누구냐 + 정보 2개 추가
1. ip주소 형태로 Domain name server (DNS) 
2. router 게이트웨이 ex) 123.246.78.1

이서넷이 lan의 대표적 기술 하드웨어적인 기술임 ip프로토콜이 아니라
하나의 단말에서 메세지가 나오면 하늘색부분 (LAN)이 다 broadcast한다.
목적지의 실질적인 하드웨어주소를 모르니까 해당되는곳에 FF를 채운다(ff=broadcast) 이 메세지가 가진것은 ip주소는 알고있는데
하드웨어주소는 몰라.근데 만약 내가 가진 ip주소가 있으면 걔만 하드웨어 주소를 알려줘(응답) 주소 문제가 풀림. 하드웨어 주소 알게됨
이게 ARP 프로토콜 시험 무조건나옴 정리하자면 ip주소를 통해 하드웨어 주소를 알아낼 수 있다. 한번 알아내면 기억해뒀다가 두고두고써먹음.
뭔개소리야 ?? 검색해서 다시 공부 ㄱㄱ

다시 이더넷으로 돌아와서 ehternet frame structure
preamble
비트패턴이 10101010 이면 준비하고있어 (7바이트)
근데 10101011 이면 데이터 시작임. 마지막 순간을 보면 11 이면 동기화 되는 시작부분
제1계층 동기화를 위해 쓰는 정해진 패턴. 시작하는 순간을 알려줌 진짜 데이터의 첫번째 비트가 어딘지를 알려줌